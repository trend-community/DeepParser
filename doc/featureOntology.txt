// Wei set up this Feature Ontology 2017/0620 and will own this file in its subsequent update

// Feature incompatibility table records features that cannot be both true at same time: we leave it to future for how and where to use and enforce this 

// Feature names can have aliases, using = to represent; long names can be shortened to around 5-character aliases as long as there are no conflicts 
// and registered here in this document using aliase = feature formate.
// Whether to use aliases or official full feature names depend on the balance between readability and space saving.

// As a general rule, the more often a feature is used, a shorter name is given.  For frequently used features, there is no need to 
// keep prefix or suffix for marking the feature classification.  But we prefer more rarely features to adopt conventions such as prefxing etc.    

// This file is a complete list of all features used in the system and will be maintained and updated during the dev process: proposals come to
// Wei for being considered to get into the ontology 

mXP <> 0

// ===================

???   //POS: change name; apostrophe

// Link Ontology: (also for Dad= Kid=; Note that Link ontology allows names same as features in Feature Ontoloy: e.g. R and X)
/ Note that link names are also part of the FEATURE system which can be checked as features.  When a link is established, 
// the system automatically set the corresponding features and when it is delinked, the system removes the related features.

S,Subj,Arg,Kid // Subject
O,Obj,Arg,Kid // Object
C,Comp,Arg,Kid  // Complement: PredPrep == (PP C); NomPrep, PredPrep
CN	// Conjoined link
NX	// Next link
EQ	// Equivalent link, e.g. coreference, apppositives, reduplication links
ObjV,Obj,Arg,Kid 	// VP as Object, PredInf
Cvp,Arg,Kid  	// VP as Object complement
Cap,Arg,Kid 	// AP as Complement, PredAdj
R,Adv,Adjunct,Kid // Adverbial
M,Mod,Adjunct,Kid // Modifier
B,Buyu,Kid // Buyu
X,Kid // Dummy link
ModS,Mod,Adjunct,Kid; CL  // relative clause
ObjS,Obj,Arg,Kid; CL 	// Object CLause: PredClause
AdvS,Adv,Adjunct,Kid  // adverbial clause AdvClause
KidX,Kid; CL 	// AdvClauseVG
Kid 	// e.g. AdvClauseVG from parent "than" linking to the clause VG 


agentS,Subj,Arg,Kid;agent // logical role becomes part of ontology
instrO=instrumentO,Obj,Arg,Kid;instrument
benefO=beneficiaryO,Obj,Arg,Kid;beneficiary
instrS=instrumentS,Subj,Arg,Kid;instrument
compareeC,C,Comp,Arg,Kid; comparee 
recipC=recipientC,C,Comp,Arg,Kid; recipient
benefC=beneficiaryC,C,Comp,Arg,Kid; beneficiary
// purposeC,C,Comp,Arg,Kid // use purposeR instead
purposeR,R,Adv,Kid; purpose
instrR=instrumentR,R,Adv,Kid; instrument  // including original ROLE:method and approach
timeR,R,Adv,Kid; time
durR,R,Adv,Kid; dur 	// durationR
locR=locationR,R,Adv,Kid; loc
reasonR,R,Adv,Kid; reason
aboutR,R,Adv,Kid; about
R,Adv,Kid  // including PPTYPE:Adv 

m,Mod,Kid 	// m is a morphological modifier relation in open compounding instead of M which is sentential modifier 
o,Obj,Arg,Kid 	// o is a morphological object relation in open compounding instead of O which is sentential object 
s,Subj,Arg,Kid	// s is a morphological subject relation in open compounding instead of S which is sentential subject
r,Adv,Kid 	// r is a morphological adverbial relation in open compounding instead of R which is sentential adverbial 
b,Buyu,Kid // buyu

Conj 	// Conjoin POS
CM 	// CMMA POS including SPACE between Chinese characters

S2,Subj,Arg,Kid  // logical Subject
O2,Obj,Arg,Kid  // logical Object
R2,Adv,Kid  	// Logical Adverbial
M2,Mod,Adjunct,Kid 		// Logical Modifier
Equiv  //	
Equiv2 	// LEquiv
Next  // Next link
Topic,Adjunct,Kid  // Topic link
To,Comp,Arg,Kid 	// duixiang, to/towards somebody or some entity
WhereTo,Comp,Arg,Kid 	//

lS,S,Subj,Arg,Kid // left Subject node : left (or right) is automatically set by system when linking)
rS,S,Subj,Arg,Kid // right Subject node
lO,O,Obj,Arg,Kid // Left Object
rO,O,Obj,Arg,Kid // right Object
lS2,S2,Subj,Arg,Kid // left Subject node : left (or right) is automatically set by system when linking)
rS2,S2,Subj,Arg,Kid // right Subject node
lO2,O2,Obj,Arg,Kid // Left Object
rO2,O2,Obj,Arg,Kid // right Object
lC,C,Comp,Arg,Kid // left Complement
rC,C,Comp,Arg,Kid // right Complement
lR,R,Kid // left Adverbial
rR,R,Kid // right Adverbial
lR2,R2,Adv,Kid 	//
rR2,R2,Adv,Kid 	//
lM,M,Kid // left Modifier
rM,M,Kid // right Modifier

Kid 	// child link

// checking ingVG is not as general as checking LOGICAL_XP:VG which includes deverbal as well: v|V
// use nDeverbal to replace HowNet fact
nDeverbal,n;v  // v is logical verb from lexicon, different from POS V
ingV,V
toV,inf,V; nonPred

// morphology features
active 	// no need to use in English where we use !passive for unmarked active voice
passive 	// passive voice
pres = present,finite,Pred
past,finite,Pred
modal,finite,Pred  	// English predicate V tense

compa = comparative
superl = superlative

infin = infinitive,inf,VG; nonPred 	// 
infAdv,inf,VG; nonPred 	// infAdverbial

// Special boundary feature
oCL 	// opening or left boundary of a clause
cCL		// closing or right boundary of a clause
oNP		// opening or left boundary of an NP
cNP 	// closing or right boundary of an NP
oMod	// opening or left boundary of a Modifier phrase (mostly AP, but not necessarily) 
cMod	// closing or right boundary of a Modifier phrase (mostly AP, but not necessarily) 

oQuot 	// opening quotation
cQuot	// closing quotation


// Feature Ontology: first migrate useful features here and then rename them systematically

// Reserved features are a small closed set which are short and need no suffix:

N  // noun
V  // verb
A  // adjective
Z  // misc POS
P  // Preposition

NV,v; 	// for words which are either V or N in grammar and logical v by nature.  This is very common for both English and Chinese
Cs		// suffixing -s (including -es, -ies) for either NNS or VBZ
Cing	// suffixing -ing
Ced		// suffixing -ed
Cly		// suffixing -ly
Cor		// suffixing -or (including -er)

uN 		// wPosN
dN		// wNegN
up		// pW
down	// nW
hao		// goodW
huai	// badW


NN=N; npr 	// at least keep NN in English
VB=V; va 	// VB can retire in time
JJ=A; va 	// JJ can retire in time
IN=P 	// IN can retire in time
PRP=pro; npr // PRP can retire in time
NNP,N;npr	// NNP to keep 

JJR,A,comparative	// JJR to retire in time, replaced by [A comparative]
JJS,A,superlative	// JJS  to retire 
NNS,N,plural	// NNS to retire
sSuf	// suffix s, for both NNS and VBZ

LS	// POS
MD	// POS Modal


npr // == n|pro, we use lowercase npr to stand for the frequent use of N|pro.  
va // == V|A|v|a|V9|A9 谓词, of frequent use
nva // == V|A|N|v|a|n|V9|A9|N9 名动形三类主要实词

RB=adv,advP // adv (RB to retire): adverb POS: advP is those adverbial-like stuff that appears everywhere and can often be ignored in pattern matching, including R|time|date|PP|RP
VB,V 	// keep VB for English: original verb form (infinitive without to)
pro 	// pronoun
SC = Sconj,xC 	// SCONJ and Sconj to retire, POS tag

// candidate POS features N9, V9, A9, R9, X9 assigned by lexicon will remain unchanged 
N9
V9
A9
R9
Z9

vt,V 	// mostly transitive V transV
vi,V	// intransitive V intransV: vs. VSUBCAT:VI is for words like employee whose O is internalized realized
VI  // ??? subcat: need to change name to avoid confusion with vi, if we want to keep it
ovt,V 	// otransV

OPAR,Punc  // opening parenthesis
CPAR,Punc 	// closing parenthesis
DDSH,Punc  // dash or hyphen: now use '\-' instead

NP,NP2,XP  	// NP2 == NP|np; so-called HEAD_XP:NP
AP,AP2,XP 
VG,VG2,XP 	// VG2 == VG|vg == HEAD_XP:VG
PP,PP2,XP
RP,RP2,XP;RB
DE,DE2,XP
NE,NE2,XP;objectW 	

objectW		// will rename it in time, it is potential object for sentiment association

freqDE=freqencyDE,DE,DE2,XP;freq,freqR
quantDE=quantifierDE,DE,DE2,XP;quantR,quant
timeDE,DE,DE2,XP;time,timeR
dateDE,DE,DE2,XP;time,timeR
measureDE,DE,DE2,XP;measure
moneyDE,DE,DE2,XP;money,measure
ageDE,DE,DE2,XP;age,perF,measure

percent // more like compounding, similar to quantifier, so we do not count it as DE XP.
ratio 	// very similar to percent, can be converted to percent, e.g. 3:4
fraction  // very similar to percent, can be converted to percent, 20 分之 5

perNE=personNE,NE,NE2,XP; name,per,animate,physical,n; perOrg // personN Chinese has already retired this seasoned feature, replaced by per in Hownet ontology
locNE=locationNE,NE,NE2,XP; loc,space,n;name	//
orgNE=organizationNE,NE,NE2,XP;org,group,physical; perOrg,name
comNE=companyNE,NE,NE2,XP;com,org,group,physical; perOrg,name,orgNE // company name
eventNE,NE,NE2,XP;event,abstract,n
measureDE,DE,DE2,XP; measure 

np,NP2,XP 	// np is automatically given by system when an NP is wrapped by external XP (e.g. PP), leaving a historical track 
vg,VG2,XP 	
ap,AP2,XP
pp,PP2,XP
de,DE2,XP
ne,NE2,XP

enVG,VG,VG2,XP;nonPred 	// non predicate VG
ingVG,VG,VG2,XP;nonPred 	//
nonPred 	// non predicate VG or AP
enVG|infinitive

mXP,XP  // multi-word XP, automatically assigned by the system when chunking multiple words into a chunk (lexical XP might need assignment inside lexicon) 
mWD,0		// multi-word compound is Xbar0 black-box: used to be DETYPE:cpd

nonPerF 	// nonPersonF


// subcat types
VerbNom
Nom
NomSubj 	// NOMTYPE:Subject
NomObj     // NOMTYPE:Object

VTH 
VSS 

VPPPP

perOrgV  	// personOrgActionV
???activeV


// Other features need suffix -N, -V, -A, or -L (for lexical) to distinguish from stem forms (when single quotation marks are omitted): 

LandVehicleN,productN // LandVehice 

a, va // logical adjective
v; va // logical verb
n  // logical noun 逻辑名词
nTime,n  // time 
nDur,nTime,n // durationN,timeLength
nTimeUnit,nTime,n  // timePeriodN
nMorningL,nTimeUnit,nTime,n  // lexical "morning" tokens (cf: NORM is for synoyms, while stemL is for enumrable lexical semantic class) 
nTimeR,nTime,n;advP   // timeRB: time nouns which are often used as adverbial 
nMonday,nTimeR,nTime,n;advP	// Monday, Tuesday...
nMonth,nTimeR,nTime,n;advP	// January, March, ...
nToday,nTimeR,nTime,n;advP // today, yesterday, ...
nWeekdayL,nTimeR,nTime,n;advP 	// Monday, Saturday, ...
nSpace,n  // space
nLoc,nSpace,n 	// location
nLocR,nLoc,nSpace,n;advP 	// locationRB: location nouns which are often used as adverbial
nLocUnit,nLoc,nSpace,n 	// locationHN: city, town, province
nDirection,nSpace,n 	// direction
nAbstract,n   // abstract object
nMental,nAbstract,n 	//
nAspiration,nMental,nAbstract,n 	//

nPhysical,n	// physical object
nInanimate,nPhysical,n  // inanimate object
nArtifact,nInanimate,nPhysical,n   // man-made object
nEdible,nArtifact,nInanimate,nPhysical,n  // food and drinks
nFood,nEdible,nArtifact,nInanimate,nPhysical,n; solutionN  // food
chemical,solutionN // will retire chemicalN shortly
chemicalN,chemical  // Chinese has retired chemicalN
drugN,chemical,solutionN // if drugN stays, it can eventually join Hownet
material,solutionN // will retire materialN shortly
companyPN,institution
orgPN,institution
companyN,institution 
org // institution retired, use org
orgHN,institution
mediaN,institution
fact,abstractN 
disease,nW,perF,abstractN,medicalD // get rid of diseaseN and let disease directly leads to nW
symptom,nW,perF,medicalD
bodyPartN,part,aspectW
fruit,food
vegetable,food
crop,food
malePN,maleW  // malePN to personPN is in protege 
femalePN,femaleW
titleN,per
relativesN,per
occupationN,per
institution,orgN
xC,NOTobjectW,NOTaspectW  // cf: vacuousW without modifier cannot be Object either, but we control that in rules
bacteria,wNegN
eventN,fact
eventPN,fact
MusicTool,productN
perVper,perObjV,perF,vt
perVobj,nonPerObjV,perF,vt
Vpre,vtO // V+Prep words must be transVO
timeRB,advP // timeRB is time adverb as a time adverbial potential while timeR is time adverbial realized
sRB,advP
masnuter,masculine,neuter  // mainly used in Russian
locPN,modJJ
countryPN,modJJ
cityPN,modJJ
behavior,perF
bodyPartN,perAnimF
symptom,phenomena,nW
perF,animateF; perOrgF,perAnimF 	// personF
perOrgF  	// person OR org related
perAnimF 	// person OR animal related

advP // advP (adv POS or adv potential) may retire in time, advP (potential adverbial materials) should be sufficient

name 	// proper name: the difference from NE is in that NE is a chunking results and NE --> name.  "name" from lexicon needs a rule to become NE.  
per=person,animate,physical,n; perOrg 	// human noun or person name
perOrg,physical,n
com=company,org,group,physical; perOrg 	// company noun or company name
org=organization,group,physical; perOrg  	// organization noun or organization name
country,loc // country noun or country name
brand 	// brand

com,org,group,physical	// company noun

currency,money,wealth,artifact,inanimate,physical,n 	// maybe no need for currency, money is enough
money,wealth,artifact,inanimate,physical,n 


vp  //	verb phrase, i.e internal-args-saturated v; 
Pred 	 // predicate or predicative: in Chinese, ap or vp (sometime even np or de-structure) can be Pred; in English, Pred is only for finite vp (called predicate vp, cf: nonPred) 

mannerR,advP //
// special features

proNN

// Othography features

punct  // punctuation 
Oqut
ved

rightP
Done 	// special feature for done, processed, should be gone : make the token invisible from now on
Gone    // special feature for making a token disappear as if it were not there

JS,JS2 		// jushou,  BOS or STRT, all JS is JS2: there is only one JS for a sentence, but there can be numerous JS2 
JM		// jumo, end of sentence (with punc or without)
JS2		// logical JS clauseB: a sentence can have numerous JS2 as the processing moves on, basically before first Subject
lastWord=JM2 	// lastWord to retire.  lastWord of a sentence while JM is on sentence-ending punctuation

0		// special feature for Xbar0 (singleton token with or without XP)
1		// special feature for head-path matching or singleton matching
CL		// Cause feature, which is assigned typically when a syntactic subject is linked with a predicate (Pred or vp)

whatCL  	// whatClause
3pSg	// thirdPerSing
wh 	//

fact // FACT:yes|no not hownet fact 
negative=neg
neg9 	// display negative (usually due to long distance negation)

pEMO=EMO  
gEMO,EMO
nEMO,EMO 

// special configuration features

0 	// word level (including multi-token compound words)
1	// multi-word XP level (excluding VP)
2	// VP level
3	// clause level: == CL which is to retire.

////////////////// the following to sort out further and integrate with above
xC 	// 小词
sconjW=SC,xC
UH,xC
EX,xC  	// POS, but interpretation is different between English and Chinese
P,xC
CC,xC	// POS
TO,xC
CD 	// POS
DT	// POS
FW	// POS

A0	// candidate A (JJp)
V0	// candidate V (VBp)
N0	// candidate N (NNp)



disease
symptom 	// there is a gray are between disease and symptom
bodypart
human = per  // human to retire in time
fact= deverbalN // fact to retire in time, and there is overlapping between deverbal and symptom
plusEvent  // == pW deverbal; to retire
minusEvent  // == nW deverbal; to retire
edible = food 	// edible to retire
pW // rename in time
nW // rename in time
improveW,pW 	// useful sentiment feature
succeedW,pW
worsenW,nW
fail,nW	// "decline" should belong to [fail]
medicalD // 
term 	// 
neFeature // ??? might not be of use anymore and can retire
solutionN 	// useful for problem-solution analysis, in comparison with sentiment analysis
treatment 	// 
experiment 	//
device 	//
drug 	//
chemical 	// 
medicine 	// any need to distinguishb drug from medicine?? one may retire

perF = personF 	// 

abstract 	//

durationN = dur = duration 	// durationN to retire

time 	// 
direction 	//
loc=location 	// 

mental 	//

artifact 	//

animal 	// 

plant 	// 

bacteria 	//

infoform=info=information	 // infoform to retire; should !xC !MD|UH

physical 	// [POS:NN FEATURE:physical FEATURE:!information|shape|xC ^X]

